- hosts: all
  ignore_unreachable: False
  gather_facts: yes
  vars:
    - rebt: "{{ reboot_now | default('false') }}"
  tasks:
    - name: update system (Debian)
      become: yes
      become_method: sudo
      apt:
          name: '*'
          update_cache: yes
          state: latest # not required. choices: absent;build-dep;latest;present. Indicates the desired package state. C(latest) ensures that the latest version is installed. C(build-dep) ensures the package build dependencies are instal
      when: ansible_facts['os_family'] == "Debian"

    - name: update system (RedHat)
      become: yes
      become_method: sudo
      yum:
          update_cache: yes # not required. Force yum to check if cache is out of date and redownload if needed. Has an effect only if state is I(present) or I(latest).
          name: '*'
          state: latest
      when: ansible_facts['os_family'] == "RedHat"

    - name: reboot linux if reboot_now is true
      become: yes
      become_method: sudo
      reboot:
          post_reboot_delay: 15 # not required. Seconds to wait after the reboot was successful and the connection was re-established.,This is useful if you want wait for something to settle despite your connection already working.
          test_command: whoami # not required. Command to run on the rebooted host and expect success from to determine the machine is ready for further tasks.
          reboot_timeout: 600 # not required. Maximum seconds to wait for machine to reboot and respond to a test command.,This timeout is evaluated separately for both network connection and test command success so the maximum execution time for the module is twice this amount.
          msg: Reboot initiated by Ansible # not required. Message to display to users before reboot.
          connect_timeout: undefined # not required. Maximum seconds to wait for a successful connection to the managed hosts before trying again.,If unspecified, the default setting for the underlying connection plugin is used.
      when:
        - rebt == true